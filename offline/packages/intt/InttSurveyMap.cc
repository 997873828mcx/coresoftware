#include "InttSurveyMap.h"

Eigen::Affine3d InttSurvey::GetTransform(struct Intt::Offline_s const& ofl)
{
	Eigen::Affine3d t;

	switch (ofl.layer) {
		case  3:
		switch (ofl.ladder_phi) {
			case  0:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  -0.261612052,   -0.965173115,   -0.000087493,  +74.937399797},
					{  +0.965172574,   -0.261611759,   -0.001134283,  +16.829682108},
					{  +0.001324270,   -0.000381253,   +0.999999338,  -70.050416057},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  -0.262379601,   -0.964964592,   +0.000539955,  +74.916513003},
					{  +0.964964339,   -0.262379968,   -0.000850785,  +16.929732769},
					{  +0.001196338,   +0.000297569,   +0.999999502, -186.222604248},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  -0.261655967,   -0.965161212,   +0.000055564,  +74.925570688},
					{  +0.965160897,   -0.261655887,   -0.000882032,  +16.701181014},
					{  +0.001103753,   -0.000177236,   +0.999999640,  +61.061113929},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  -0.261820480,   -0.965116537,   +0.000333477,  +74.944292000},
					{  +0.965116423,   -0.261820631,   -0.000591052,  +16.598147285},
					{  +0.000933856,   +0.000166982,   +0.999999846, +177.219029193},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  1:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  -0.707910258,   -0.706302417,   +0.000245904,  +55.651755245},
					{  +0.706302025,   -0.707910185,   -0.000606414,  +50.534015760},
					{  +0.001342363,   -0.000256322,   +0.999999799,  -70.086397700},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  -0.708142857,   -0.706069218,   +0.000242052,  +55.629187253},
					{  +0.706068547,   -0.708142625,   -0.000991350,  +50.620598963},
					{  +0.001593923,   -0.000532063,   +0.999999302, -186.262124612},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  -0.708247080,   -0.705964601,   +0.000383603,  +55.708619624},
					{  +0.705964237,   -0.708247112,   -0.000525530,  +50.464483625},
					{  +0.001382820,   -0.000102450,   +0.999999773,  +61.062128047},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  -0.709737594,   -0.704465972,   +0.000575448,  +55.767719164},
					{  +0.704465611,   -0.709737763,   -0.000520623,  +50.406986643},
					{  +0.001505396,   +0.000033336,   +0.999999590, +177.224476238},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  2:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  -0.967212126,   -0.253969348,   +0.000192076,  +21.891384732},
					{  +0.253969404,   -0.967212134,   -0.000577767,  +69.919762896},
					{  -0.000300267,   -0.000508150,   +0.999999887,  -70.130153531},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  -0.967064724,   -0.254530106,   +0.000082377,  +21.886240067},
					{  +0.254529563,   -0.967062906,   -0.002027105,  +70.054637915},
					{  -0.000019198,   -0.001937860,   +0.999998187, -186.309529676},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  -0.966882414,   -0.255221793,   -0.000081952,  +21.890821383},
					{  +0.255222006,   -0.966882461,   -0.000370011,  +69.869548168},
					{  -0.000605610,   -0.000377623,   +0.999999794,  +60.961250194},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  -0.966551037,   -0.256473604,   +0.000362844,  +21.905929282},
					{  +0.256474089,   -0.966550607,   +0.001044314,  +69.907180301},
					{  -0.000538224,   +0.001102651,   +0.999999298, +177.137434901},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  3:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  -0.962144573,   +0.272539997,   -0.000070907,  -21.282785313},
					{  -0.272540031,   -0.962144392,   +0.000338476,  +69.725891125},
					{  +0.000095675,   +0.000343520,   +0.999999964,  -70.513787677},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  -0.963551013,   +0.267523191,   -0.001024116,  -21.291829430},
					{  -0.267522309,   -0.963551244,   +0.000324157,  +69.672821256},
					{  +0.001469449,   +0.000586065,   +0.999999662, -186.672482891},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  -0.963473928,   +0.267802645,   -0.000011595,  -21.271334400},
					{  -0.267802579,   -0.963473761,   +0.000240843,  +69.755460622},
					{  +0.000424636,   +0.000234832,   +0.999999987,  +60.565956392},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  -0.963559178,   +0.267495660,   -0.000305443,  -21.282760307},
					{  -0.267495739,   -0.963558851,   +0.000581338,  +69.800614409},
					{  +0.000151863,   +0.000641614,   +0.999999846, +176.762455327},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  4:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  -0.697969437,   +0.716127613,   -0.000038778,  -55.254038538},
					{  -0.716127398,   -0.697969072,   +0.000884853,  +50.146654223},
					{  +0.000728097,   +0.000645358,   +0.999999609,  -70.347804547},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  -0.696495315,   +0.717561074,   +0.000659445,  -55.284759520},
					{  -0.717561267,   -0.696495450,   +0.000046090,  +50.098622423},
					{  +0.000633139,   -0.000441303,   +0.999999793, -186.518875239},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  -0.696682852,   +0.717379134,   +0.000503851,  -55.217946758},
					{  -0.717378928,   -0.696682980,   +0.000601460,  +50.231777243},
					{  +0.000908993,   +0.000057388,   +0.999999676,  +60.716479621},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  -0.696430210,   +0.717624575,   +0.000133097,  -55.173321253},
					{  -0.717624362,   -0.696430040,   +0.000727499,  +50.302066642},
					{  +0.000744660,   +0.000410917,   +0.999999727, +176.907856668},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  5:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  -0.258634226,   +0.965975272,   -0.000409865,  -74.311259855},
					{  -0.965975926,   -0.258633964,   +0.000392015,  +16.708975018},
					{  +0.000912385,   +0.000497231,   +0.999999845,  -70.151043323},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  -0.256647212,   +0.966504979,   +0.000609341,  -74.321151446},
					{  -0.966505772,   -0.256647188,   +0.000001813,  +16.693976896},
					{  +0.000817123,   -0.000589809,   +0.999999890, -186.322134771},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  -0.256899947,   +0.966438009,   +0.000202040,  -74.313977426},
					{  -0.966438529,   -0.256899917,   +0.000410166,  +16.753579035},
					{  +0.001093015,   -0.000091069,   +0.999999793,  +60.913263041},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  -0.256559563,   +0.966528433,   -0.000182995,  -74.302840147},
					{  -0.966529013,   -0.256559387,   +0.000338805,  +16.794784102},
					{  +0.000928630,   +0.000262395,   +0.999999927, +177.104656949},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  6:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  +0.265296080,   +0.964166694,   -0.000663623,  -74.296934064},
					{  -0.964166304,   +0.265296418,   +0.000032796,  -22.517396092},
					{  -0.000297090,   +0.000634365,   +0.999999745,  -70.383551916},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  +0.264474122,   +0.964392581,   +0.000517105,  -74.283913684},
					{  -0.964392096,   +0.264474210,   +0.000328502,  -22.545608355},
					{  -0.000307804,   -0.000582795,   +0.999999767, -186.543032772},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  +0.263181124,   +0.964746285,   +0.000421668,  -74.280838911},
					{  -0.964745700,   +0.263181153,   +0.000492896,  -22.471083356},
					{  -0.000130295,   -0.000534447,   +0.999999840,  +60.730211432},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  +0.261021176,   +0.965333001,   +0.000115931,  -74.276253033},
					{  -0.965332320,   +0.261021350,   +0.000442904,  -22.432341525},
					{  -0.000098018,   -0.000226611,   +0.999999962, +176.902174271},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  7:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  +0.707544715,   +0.706669261,   +0.000427429,  -54.991165017},
					{  -0.706669375,   +0.707543952,   -0.000897607,  -56.227688648},
					{  -0.000773566,   +0.000332440,   +0.999999599,  -70.254751428},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  +0.705155602,   +0.709051153,   +0.001959484,  -55.111417856},
					{  -0.709053758,   +0.705154772,   +0.000570443,  -56.188369663},
					{  -0.000483254,   -0.001791297,   +0.999998022, -186.411774768},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  +0.708307673,   +0.705904527,   +0.000486704,  -54.930902047},
					{  -0.705905253,   +0.708306957,   -0.000163358,  -56.248747731},
					{  -0.000221804,   -0.000228765,   +0.999999828,  +60.853685701},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  +0.708275526,   +0.705936956,   +0.000073128,  -54.887771070},
					{  -0.705937385,   +0.708274528,   -0.000712859,  -56.299577304},
					{  -0.000372986,   +0.000452382,   +0.999999730, +177.041604820},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  8:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  +0.965736071,   +0.259524195,   +0.001483077,  -21.270807446},
					{  -0.259524650,   +0.965736424,   +0.000213751,  -75.859485694},
					{  -0.001102780,   -0.000592430,   +0.999998932,  -70.287772825},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  +0.965396141,   +0.260785341,   +0.001620198,  -21.460956014},
					{  -0.260786294,   +0.965396394,   +0.000492876,  -75.907357149},
					{  -0.001103083,   -0.000898949,   +0.999998643, -186.458250031},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  +0.966215396,   +0.257734812,   +0.001413076,  -21.098351646},
					{  -0.257735524,   +0.966215358,   +0.000454449,  -75.766597326},
					{  -0.000889998,   -0.000805119,   +0.999998902,  +60.762683532},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  +0.965760046,   +0.259436248,   +0.001208370,  -20.937346874},
					{  -0.259436374,   +0.965760159,   +0.000070656,  -75.734959463},
					{  -0.000925850,   -0.000382875,   +0.999999234, +176.944763918},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  9:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  +0.964059448,   -0.265684278,   +0.001057283,  +22.158890557},
					{  +0.265686060,   +0.964057645,   -0.001962335,  -75.254552635},
					{  -0.000588656,   +0.002172856,   +0.999997534,  -70.219356611},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  +0.964098615,   -0.265541959,   +0.001117393,  +22.037653697},
					{  +0.265543860,   +0.964096686,   -0.002022462,  -75.040368874},
					{  -0.000608667,   +0.002246698,   +0.999997344, -186.392016835},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  +0.964116436,   -0.265476493,   +0.001258978,  +22.322688925},
					{  +0.265478411,   +0.964115632,   -0.001531802,  -75.471838406},
					{  -0.000906123,   +0.001811190,   +0.999998022,  +60.921851083},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  +0.963729576,   -0.266878959,   +0.000886432,  +22.455008144},
					{  +0.266879904,   +0.963729383,   -0.000936281,  -75.619774067},
					{  -0.000701417,   +0.001139156,   +0.999999176, +177.087787278},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case 10:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  +0.703933387,   -0.710244433,   +0.000986695,  +55.785041746},
					{  +0.710240203,   +0.703952875,   -0.001543629,  -55.819158820},
					{  -0.006095507,   +0.001787469,   +0.999998324,  -70.300159167},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  +0.703667749,   -0.710528529,   +0.000995948,  +55.654334210},
					{  +0.710529115,   +0.703667480,   -0.000606528,  -55.674016872},
					{  -0.000195701,   +0.001134493,   +0.999999291, -186.407412561},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  +0.700585793,   -0.713568114,   -0.000085909,  +55.858390233},
					{  +0.713567839,   +0.700585698,   -0.000766529,  -55.951999895},
					{  +0.000610911,   +0.000475968,   +0.999999715,  +60.836481291},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  +0.700049010,   -0.714094568,   +0.000439167,  +55.879565787},
					{  +0.714094739,   +0.700048687,   -0.000816611,  -56.055019585},
					{  +0.000137655,   +0.000885561,   +0.999999567, +177.009374888},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case 11:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  +0.254356525,   -0.967107104,   +0.000941004,  +75.180684836},
					{  +0.967092623,   +0.254367050,   -0.000822349,  -21.932417377},
					{  -0.005665599,   +0.001119086,   +0.999999206,  -70.230639197},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  +0.253977958,   -0.967209932,   +0.000480338,  +75.074493726},
					{  +0.967210073,   +0.253977813,   -0.000006241,  -21.874526898},
					{  +0.000233952,   +0.000465936,   +1.000000025, -186.338001886},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  +0.249788821,   -0.968300290,   -0.000376471,  +75.220752110},
					{  +0.968300067,   +0.249788934,   -0.000685870,  -22.008029610},
					{  +0.001037666,   -0.000194442,   +0.999999634,  +60.906061827},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  +0.249060798,   -0.968487874,   +0.000103266,  +75.210982513},
					{  +0.968487860,   +0.249060620,   -0.000466628,  -22.084223967},
					{  +0.000563905,   +0.000214830,   +0.999999903, +177.078972606},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			default:
			return t;
		}
		case  4:
		switch (ofl.ladder_phi) {
			case  0:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  -0.008089515,   -0.999967206,   +0.000383015,  +83.589190119},
					{  +0.999966506,   -0.008089954,   -0.001192347,   -2.531283833},
					{  +0.000927276,   +0.000374733,   +0.999999302,  -70.075733112},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  -0.007237343,   -0.999973780,   +0.000246954,  +83.584000802},
					{  +0.999973243,   -0.007237574,   -0.001010151,   -2.403997376},
					{  +0.000742802,   +0.000240771,   +0.999999494, -186.271733360},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  -0.008998510,   -0.999959510,   +0.000071420,  +83.600411289},
					{  +0.999959176,   -0.008998545,   -0.000746865,   -2.664377735},
					{  +0.000486465,   +0.000066330,   +0.999999678,  +61.006684514},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  -0.007839544,   -0.999967881,   +0.001666730,  +83.664959579},
					{  +0.999968899,   -0.007840868,   -0.000764675,   -2.747537084},
					{  +0.000529733,   +0.001661988,   +0.999998285, +177.185712051},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  1:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  -0.503150548,   -0.864198137,   +0.001001484,  +72.684445394},
					{  +0.864198386,   -0.503150607,   +0.000313821,  +37.942488749},
					{  +0.000979787,   +0.001022127,   +0.999999549,  -70.155297143},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  -0.503681182,   -0.863889323,   +0.000604777,  +72.597897522},
					{  +0.863889007,   -0.503681538,   -0.000282166,  +37.941457029},
					{  +0.001374915,   +0.000378653,   +0.999999655, -186.347141032},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  -0.505997863,   -0.862534202,   -0.000854127,  +72.686980127},
					{  +0.862534370,   -0.505997429,   -0.000841492,  +37.864599427},
					{  +0.000858016,   -0.001166079,   +0.999999333,  +61.003341534},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  -0.510102192,   -0.860113709,   +0.000317271,  +72.639079751},
					{  +0.860113287,   -0.510102346,   -0.000429685,  +37.789235843},
					{  +0.001241769,   +0.000046784,   +0.999999746, +177.168662236},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  2:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  -0.867987897,   -0.496583880,   +0.000419549,  +42.949834999},
					{  +0.496584015,   -0.867988298,   +0.000768931,  +67.673943535},
					{  -0.000962912,   +0.000877528,   +0.999999476,  -70.101795836},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  -0.868292706,   -0.496050696,   +0.000374197,  +42.909179130},
					{  +0.496050676,   -0.868293530,   +0.000054424,  +67.630195369},
					{  -0.000567872,   +0.000235248,   +1.000000101, -186.293655273},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  -0.869620847,   -0.493718339,   -0.000609226,  +42.952877089},
					{  +0.493718792,   -0.869620889,   -0.001159711,  +67.607270719},
					{  -0.001085149,   -0.001304270,   +0.999999069,  +61.056882453},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  -0.871963634,   -0.489569329,   +0.000199050,  +42.915342475},
					{  +0.489569208,   -0.871964374,   -0.000217136,  +67.517611280},
					{  -0.000702032,   -0.000082146,   +1.000000113, +177.222193201},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  3:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  -0.999904047,   -0.013848298,   -0.000291900,   +2.473940290},
					{  +0.013848418,   -0.999904042,   -0.000359593,  +78.634115807},
					{  -0.000308645,   -0.000363670,   +0.999999884,  -70.000433461},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  -0.999926874,   -0.012086923,   -0.000356270,   +2.516787014},
					{  +0.012087315,   -0.999926301,   -0.001135732,  +78.718594021},
					{  -0.000350827,   -0.001139971,   +0.999999282, -186.151787782},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  -0.999929352,   -0.011882890,   +0.000161950,   +2.498809658},
					{  +0.011882705,   -0.999928970,   -0.000925321,  +78.547252613},
					{  +0.000196328,   -0.000923341,   +0.999999564,  +61.123710073},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  -0.999929057,   -0.011904925,   +0.000286870,   +2.527748520},
					{  +0.011905124,   -0.999928984,   +0.000543408,  +78.512263812},
					{  +0.000299311,   +0.000546773,   +0.999999820, +177.307877652},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  4:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  -0.861919574,   +0.507044880,   +0.000538467,  -42.355299329},
					{  -0.507044892,   -0.861919645,   +0.000170429,  +67.163551948},
					{  +0.000547502,   -0.000126353,   +0.999999811,  -70.341382373},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  -0.862874356,   +0.505415923,   +0.001500127,  -42.448761463},
					{  -0.505418460,   -0.862871730,   -0.002214364,  +67.264359985},
					{  +0.000420414,   -0.002668958,   +0.999996429, -186.502033773},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  -0.860139791,   +0.510058199,   -0.000296987,  -42.291232926},
					{  -0.510058400,   -0.860139688,   +0.000511818,  +67.211142120},
					{  -0.000129882,   +0.000591167,   +0.999999847,  +60.841027325},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  -0.858691953,   +0.512451751,   -0.001064324,  -42.356039982},
					{  -0.512459402,   -0.858711300,   +0.002680455,  +67.362081004},
					{  -0.005701140,   +0.002846356,   +0.999995823, +176.947021694},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  5:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  -0.497059480,   +0.867716279,   +0.000617622,  -71.957513437},
					{  -0.867716640,   -0.497059578,   +0.000104858,  +37.464602804},
					{  +0.000808264,   -0.000485015,   +0.999999644,  -70.267388348},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  -0.498695138,   +0.866773213,   +0.002635272,  -72.115906519},
					{  -0.866777661,   -0.498693329,   -0.001489228,  +37.541826497},
					{  +0.000681852,   -0.003027125,   +0.999995448, -186.427986401},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  -0.494019772,   +0.869450577,   -0.000277167,  -71.894710698},
					{  -0.869450809,   -0.494019877,   -0.000012957,  +37.497012123},
					{  +0.000129623,   +0.000231595,   +1.000000079,  +60.915006532},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  -0.491573196,   +0.870821363,   -0.002018884,  -71.998604656},
					{  -0.870816164,   -0.491593277,   +0.001489781,  +37.559940568},
					{  -0.005442648,   +0.002486064,   +0.999996751, +177.021056446},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  6:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  +0.003684637,   +0.999993047,   +0.000574235,  -82.627989847},
					{  -0.999993018,   +0.003684265,   +0.000730463,   -3.094048710},
					{  +0.000652632,   -0.000576971,   +0.999999562,  -70.410751848},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  +0.001798616,   +0.999993520,   +0.003118722,  -82.814446199},
					{  -0.999998260,   +0.001797022,   +0.000359511,   -3.144833416},
					{  +0.000526395,   -0.003119374,   +0.999995073, -186.571324023},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  +0.007184117,   +0.999974184,   -0.000141607,  -82.577766876},
					{  -0.999974199,   +0.007184104,   +0.000180828,   -2.991186732},
					{  -0.000026329,   +0.000140185,   +0.999999978,  +60.771635713},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  +0.009985068,   +0.999947412,   -0.002401473,  -82.688535976},
					{  -0.999934366,   +0.009971731,   +0.000610717,   -2.950275212},
					{  -0.005598853,   +0.002395088,   +0.999996926, +176.877685725},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  7:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  +0.500791930,   +0.865567057,   +0.000259572,  -72.131815786},
					{  -0.865566141,   +0.500792981,   +0.000047392,  -43.702312251},
					{  -0.000935661,   -0.000247146,   +0.999999961,  -70.431845752},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  +0.502679295,   +0.864471991,   +0.000812283,  -72.160843832},
					{  -0.864471414,   +0.502680186,   +0.000393817,  -43.724071309},
					{  -0.000936163,   -0.000896969,   +0.999999609, -186.597118958},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  +0.501057644,   +0.865412793,   +0.000939926,  -72.055604567},
					{  -0.865412352,   +0.501058352,   +0.000586411,  -43.684868690},
					{  -0.000841853,   -0.001105715,   +0.999999494,  +60.669710352},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  +0.502099526,   +0.864808988,   +0.000663447,  -71.962334358},
					{  -0.864808283,   +0.502100397,   +0.000409832,  -43.620907556},
					{  -0.000838985,   -0.000776933,   +0.999999791, +176.823158978},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  8:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  +0.866721518,   +0.498790983,   +0.001039690,  -42.430357210},
					{  -0.498791427,   +0.866722129,   +0.000040110,  -73.484869641},
					{  -0.001095308,   -0.000552952,   +0.999999455,  -70.365588010},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  +0.868411064,   +0.495844258,   +0.000620815,  -42.530106160},
					{  -0.495843976,   +0.868411404,   -0.000729853,  -73.454851059},
					{  -0.001124216,   +0.000327187,   +0.999999532, -186.539723676},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  +0.866432740,   +0.499292421,   +0.001067774,  -42.284875454},
					{  -0.499293387,   +0.866432682,   +0.000791912,  -73.422862551},
					{  -0.000722225,   -0.001219006,   +0.999999196,  +60.735944302},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  +0.866307667,   +0.499509367,   +0.001061314,  -42.161540890},
					{  -0.499510054,   +0.866308106,   +0.000323748,  -73.348659529},
					{  -0.000976493,   -0.000810397,   +0.999999410, +176.920156656},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  9:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  +1.000001471,   +0.000611955,   +0.000957738,   -1.842554094},
					{  -0.000611011,   +0.999999516,   +0.000773787,  -84.314959778},
					{  +0.000856078,   -0.000771443,   +0.999998709,  -70.365278173},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  +0.999999344,   +0.002179603,   +0.000918168,   -1.952080775},
					{  -0.002178860,   +0.999997062,   +0.001063660,  -84.450331512},
					{  +0.000924427,   -0.001059901,   +0.999998409, -186.514734025},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  +0.999998880,   -0.002149413,   +0.001380017,   -1.694620787},
					{  +0.002149688,   +0.999997158,   +0.001032166,  -84.199927568},
					{  +0.000446464,   -0.001031248,   +0.999998744,  +60.774294684},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  +0.999983121,   -0.006034288,   +0.001280141,   -1.532467682},
					{  +0.006035435,   +0.999981701,   +0.000417196,  -84.120584543},
					{  +0.000551722,   -0.000418523,   +0.999999141, +176.943167745},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case 10:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  +0.864864378,   -0.502005848,   +0.000881827,  +43.203539857},
					{  +0.502006069,   +0.864863329,   -0.000927976,  -72.910232208},
					{  +0.000464738,   +0.001245363,   +0.999999085,  -70.613292568},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  +0.864316210,   -0.502949426,   +0.000651388,  +43.103635603},
					{  +0.502949181,   +0.864315687,   -0.000221846,  -72.826107242},
					{  +0.000329781,   +0.000518647,   +0.999999785, -186.803858819},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  +0.865086870,   -0.501622641,   +0.000691406,  +43.324445309},
					{  +0.501622576,   +0.865086070,   -0.000643467,  -73.050510130},
					{  +0.000491722,   +0.000903921,   +0.999999442,  +60.472864108},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  +0.865752774,   -0.500472465,   +0.000690650,  +43.409047428},
					{  +0.500472288,   +0.865752237,   -0.000307335,  -73.115050463},
					{  +0.000310542,   +0.000613170,   +0.999999729, +176.657696344},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case 11:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  +0.496792753,   -0.867869203,   +0.000315052,  +72.819714734},
					{  +0.867869274,   +0.496792563,   -0.000338960,  -43.050913495},
					{  +0.000275665,   +0.000441646,   +0.999999891,  -70.525197186},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  +0.496250149,   -0.868179503,   +0.000482723,  +72.791822385},
					{  +0.868179643,   +0.496249849,   -0.000489087,  -43.005812304},
					{  +0.000306480,   +0.000661571,   +0.999999758, -186.680643586},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  +0.497226492,   -0.867620790,   +0.000266584,  +72.867623728},
					{  +0.867620864,   +0.497226402,   -0.000065677,  -43.055626040},
					{  +0.000066677,   +0.000263826,   +0.999999980,  +60.580509584},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  +0.499157202,   -0.866511347,   +0.000531848,  +72.926229635},
					{  +0.866511503,   +0.499156872,   -0.000497332,  -43.096122152},
					{  +0.000318625,   +0.000709180,   +0.999999730, +176.758803439},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			default:
			return t;
		}
		case  5:
		switch (ofl.ladder_phi) {
			case  0:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  -0.196714782,   -0.980460562,   +0.000628021, +100.578664884},
					{  +0.980460506,   -0.196715167,   -0.000701255,  +16.623188199},
					{  +0.000701541,   +0.000478123,   +0.999999583,  -70.116157682},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  -0.197249708,   -0.980353175,   -0.000477470, +100.527466066},
					{  +0.980353125,   -0.197249233,   -0.000800857,  +16.688179122},
					{  +0.000579839,   -0.000625666,   +0.999999576, -186.316577484},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  -0.198006396,   -0.980200708,   +0.000239716, +100.621220043},
					{  +0.980200370,   -0.198006487,   -0.000905022,  +16.519889835},
					{  +0.000820083,   +0.000056262,   +0.999999604,  +60.949730374},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  -0.200233699,   -0.979747929,   +0.000688878, +100.676394919},
					{  +0.979747829,   -0.200234179,   -0.000779099,  +16.432521872},
					{  +0.000796710,   +0.000519711,   +0.999999496, +177.109727724},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  1:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  -0.556926623,   -0.830561431,   +0.000666248,  +85.702553238},
					{  +0.830561574,   -0.556926816,   -0.000131674,  +52.713092432},
					{  +0.000523505,   +0.000479990,   +0.999999767,  -70.112674137},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  -0.558444912,   -0.829541602,   +0.000139338,  +85.653148592},
					{  +0.829541546,   -0.558444918,   -0.000319177,  +52.735704847},
					{  +0.000405843,   -0.000062731,   +0.999999940, -186.269367208},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  -0.555916664,   -0.831237962,   -0.000357472,  +85.743817178},
					{  +0.831237840,   -0.555916141,   -0.000965315,  +52.653911154},
					{  +0.000621210,   -0.000833791,   +0.999999465,  +61.034359844},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  -0.558699262,   -0.829370322,   +0.000130304,  +85.757334685},
					{  +0.829370047,   -0.558699178,   -0.000751778,  +52.572197274},
					{  +0.000730818,   -0.000312028,   +0.999999702, +177.196633835},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  2:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  -0.832126150,   -0.554586901,   -0.000028146,  +58.175752111},
					{  +0.554586539,   -0.832125796,   -0.000179830,  +80.217581374},
					{  +0.000915552,   -0.000166159,   +0.999999809,  -70.084440434},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  -0.832894106,   -0.553432893,   -0.000061351,  +58.191529625},
					{  +0.553432431,   -0.832893540,   -0.000701396,  +80.275416547},
					{  +0.001174265,   -0.000620195,   +0.999999361, -186.240086269},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  -0.832824880,   -0.553536964,   -0.000367257,  +58.119927693},
					{  +0.553536708,   -0.832824400,   -0.000462179,  +80.178012661},
					{  +0.000818426,   -0.000590155,   +0.999999754,  +61.066018655},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  -0.832749360,   -0.553650635,   -0.000222460,  +58.101895038},
					{  +0.553650313,   -0.832748998,   -0.000189504,  +80.143564723},
					{  +0.000775856,   -0.000282812,   +0.999999912, +177.248882272},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  3:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  -0.981878717,   -0.189509797,   -0.000289604,  +21.997061783},
					{  +0.189509901,   -0.981878802,   -0.000185366,  +95.253315144},
					{  -0.000316868,   -0.000236422,   +0.999999926,  -69.939666117},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  -0.982476622,   -0.186385435,   -0.000030446,  +22.023165988},
					{  +0.186385489,   -0.982476702,   -0.000025840,  +95.280139103},
					{  -0.000099641,   -0.000030257,   +1.000000007, -186.098617790},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  -0.981560912,   -0.191149164,   -0.000175134,  +21.960932775},
					{  +0.191149239,   -0.981560980,   -0.000170319,  +95.219069922},
					{  -0.000193557,   -0.000200362,   +0.999999966,  +61.201625747},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  -0.981150357,   -0.193245473,   +0.000040247,  +21.946579589},
					{  +0.193245396,   -0.981150105,   -0.000835130,  +95.149966733},
					{  +0.000132021,   -0.000811543,   +0.999999683, +177.366443233},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  4:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  -0.979860172,   +0.199683654,   -0.000330401,  -21.411594244},
					{  -0.199683927,   -0.979860153,   +0.000667420,  +95.272326710},
					{  -0.000425422,   +0.000720449,   +0.999999728,  -70.156757112},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  -0.979470375,   +0.201587162,   -0.000185076,  -21.376880907},
					{  -0.201587332,   -0.979470225,   +0.000812282,  +95.168367700},
					{  -0.000244342,   +0.000833842,   +0.999999696, -186.315520801},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  -0.979959857,   +0.199194045,   -0.000230074,  -21.451450848},
					{  -0.199194226,   -0.979959843,   +0.000628833,  +95.342036817},
					{  -0.000309185,   +0.000662444,   +0.999999801,  +60.993495395},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  -0.980070610,   +0.198648298,   -0.000321669,  -21.487083586},
					{  -0.198648479,   -0.980070758,   +0.000346931,  +95.411874203},
					{  -0.000443661,   +0.000404176,   +0.999999881, +177.156194276},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  5:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  -0.828943435,   +0.559333421,   +0.000072055,  -57.624607675},
					{  -0.559333887,   -0.828942771,   -0.000052387,  +80.227216625},
					{  +0.000690825,   -0.000084465,   +0.999999928,  -70.337698633},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  -0.829445268,   +0.558588903,   -0.000324070,  -57.615322198},
					{  -0.558589443,   -0.829444500,   +0.000396436,  +80.211152205},
					{  +0.000636798,   +0.000509689,   +0.999999852, -186.492244791},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  -0.828345728,   +0.560218156,   +0.000267270,  -57.625530051},
					{  -0.560218667,   -0.828345058,   -0.000167332,  +80.243532310},
					{  +0.000779910,   -0.000289768,   +0.999999819,  +60.790620706},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  -0.826712551,   +0.562625430,   +0.000254222,  -57.594828814},
					{  -0.562625856,   -0.826711936,   +0.000166354,  +80.233987996},
					{  +0.000997925,   -0.000008821,   +0.999999709, +176.952929397},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  6:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  -0.557362734,   +0.830269221,   +0.000175387,  -84.779577118},
					{  -0.830270054,   -0.557362494,   -0.000221006,  +52.487628019},
					{  +0.000764664,   -0.000266548,   +0.999999839,  -70.461400426},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  -0.558012139,   +0.829832765,   +0.002023998,  -84.904742078},
					{  -0.829819812,   -0.558006920,   -0.001329103,  +52.570017368},
					{  -0.004542325,   -0.002418760,   +0.999996920, -186.584609764},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  -0.555689285,   +0.831390172,   +0.000378434,  -84.772765358},
					{  -0.831391027,   -0.555688420,   -0.001006177,  +52.424363713},
					{  -0.000142754,   -0.000872078,   +0.999999458,  +60.796814866},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  -0.551852328,   +0.833940959,   -0.001871306,  -84.842116237},
					{  -0.833942849,   -0.551851866,   -0.000268181,  +52.353771000},
					{  -0.000088749,   +0.001412904,   +0.999998429, +176.968853555},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  7:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  -0.190952682,   +0.981599220,   -0.000136757,  -99.753776075},
					{  -0.981598783,   -0.190952751,   +0.000014369,  +16.476798381},
					{  -0.000340233,   +0.000138060,   +1.000000055,  -70.279994460},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  -0.189904353,   +0.981802335,   +0.000690446,  -99.773962144},
					{  -0.981802133,   -0.189904314,   -0.000248634,  +16.492932499},
					{  -0.000443395,   -0.000723642,   +0.999999760, -186.444829173},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  -0.191789087,   +0.981436146,   -0.000098784,  -99.726131168},
					{  -0.981435703,   -0.191789164,   -0.000063107,  +16.441878161},
					{  -0.000428091,   +0.000085619,   +1.000000033,  +60.822143889},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  -0.189970999,   +0.981789499,   -0.000618519,  -99.781560532},
					{  -0.981789242,   -0.189971069,   +0.000013766,  +16.444834443},
					{  -0.000411188,   +0.000611303,   +0.999999839, +176.996808351},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  8:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  +0.198989817,   +0.980001540,   -0.000057846,  -99.849278559},
					{  -0.980001301,   +0.198989903,   +0.000099692,  -22.643485473},
					{  -0.000087352,   +0.000037530,   +1.000000034,  -70.275243277},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  +0.200036209,   +0.979788161,   +0.000807054,  -99.882697875},
					{  -0.979788257,   +0.200036192,   +0.000173059,  -22.652412765},
					{  -0.000190621,   -0.000824442,   +0.999999678, -186.440074335},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  +0.198154625,   +0.980170757,   +0.000006872,  -99.800677016},
					{  -0.980170525,   +0.198154704,   +0.000042629,  -22.646991179},
					{  -0.000175125,   -0.000014696,   +1.000000024,  +60.826894062},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  +0.199969702,   +0.979801931,   -0.000502749,  -99.844424805},
					{  -0.979801832,   +0.199969789,   -0.000085122,  -22.649343599},
					{  -0.000158408,   +0.000510520,   +0.999999889, +177.001561610},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  9:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  +0.554920859,   +0.831902963,   +0.000657250,  -84.912711581},
					{  -0.831903007,   +0.554921019,   -0.000355466,  -58.614694705},
					{  -0.000547018,   -0.000349718,   +0.999999734,  -70.333100842},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  +0.555270284,   +0.831668701,   +0.001500217,  -85.041867450},
					{  -0.831669755,   +0.555270632,   +0.000098865,  -58.597037240},
					{  -0.000621548,   -0.001302831,   +0.999998892, -186.502131467},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  +0.555723995,   +0.831366460,   +0.000886173,  -84.777638689},
					{  -0.831366839,   +0.555724076,   +0.000021233,  -58.617023006},
					{  -0.000360614,   -0.000748840,   +0.999999601,  +60.799143129},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  +0.556215064,   +0.831038341,   -0.000442217,  -84.752926105},
					{  -0.831038404,   +0.556214534,   -0.000806872,  -58.661771381},
					{  -0.000308315,   +0.000815928,   +0.999999566, +176.949254209},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case 10:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  +0.831754066,   +0.555140464,   +0.001461013,  -57.393762129},
					{  -0.555141093,   +0.831755998,   +0.000242533,  -86.293469862},
					{  -0.001580323,   -0.001012466,   +0.999999048,  -70.445354095},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  +0.831955703,   +0.554837439,   +0.001722574,  -57.583217754},
					{  -0.554838847,   +0.831957424,   +0.000659246,  -86.344445260},
					{  -0.001590700,   -0.001503692,   +0.999998451, -186.629929646},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  +0.831653101,   +0.555291109,   +0.001680837,  -57.140011586},
					{  -0.555292296,   +0.831654924,   +0.000522950,  -86.268329753},
					{  -0.001601815,   -0.001368035,   +0.999998581,  +60.704914521},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  +0.833044503,   +0.553202624,   +0.001276422,  -56.975855014},
					{  -0.553202376,   +0.833046653,   -0.000407605,  -86.258941923},
					{  -0.001774574,   -0.000364999,   +0.999999137, +176.878114343},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case 11:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  +0.980964348,   +0.194184061,   +0.001282575,  -21.144916558},
					{  -0.194185064,   +0.980964642,   +0.000724509, -101.532295554},
					{  -0.001091308,   -0.000959837,   +0.999998911,  -70.369730854},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  +0.981054675,   +0.193726068,   +0.001472234,  -21.313463965},
					{  -0.193728136,   +0.981054139,   +0.001470788, -101.646043851},
					{  -0.001102855,   -0.001728214,   +0.999997832, -186.510270758},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  +0.981282913,   +0.192566917,   +0.001404546,  -20.970273940},
					{  -0.192568647,   +0.981282726,   +0.001233675, -101.411088634},
					{  -0.001114707,   -0.001481170,   +0.999998249,  +60.693070277},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  +0.982254668,   +0.187548142,   +0.001270325,  -20.822234156},
					{  -0.187549250,   +0.982254844,   +0.000832796, -101.312785832},
					{  -0.001063712,   -0.001056541,   +0.999998841, +176.837566087},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case 12:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  +0.980340021,   -0.197321127,   +0.002070721,  +22.014982137},
					{  +0.197323394,   +0.980336011,   -0.002013489, -101.103774099},
					{  -0.000299895,   +0.002382785,   +0.999995969,  -70.816081564},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  +0.980122091,   -0.198399720,   +0.002190676,  +21.766469714},
					{  +0.198403587,   +0.980115891,   -0.002846095, -100.855902430},
					{  -0.000229756,   +0.003222985,   +0.999993629, -186.963029164},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  +0.980372062,   -0.197166488,   +0.001554283,  +22.251150822},
					{  +0.197166887,   +0.980368532,   -0.001429413, -101.338235394},
					{  +0.000078091,   +0.001708301,   +0.999997396,  +60.402205687},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  +0.979701398,   -0.200474100,   +0.001320514,  +22.417937916},
					{  +0.200473659,   +0.979698191,   -0.001022783, -101.502296243},
					{  +0.000239288,   +0.001262797,   +0.999998034, +176.561256699},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case 13:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  +0.827301165,   -0.561759435,   +0.000861130,  +58.144340248},
					{  +0.561758977,   +0.827300215,   -0.000430314,  -86.031448976},
					{  +0.000552652,   +0.000834125,   +0.999999525,  -70.502477501},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  +0.826726245,   -0.562604507,   +0.001230185,  +58.022161676},
					{  +0.562604718,   +0.826724848,   -0.000961559,  -85.950936630},
					{  +0.000540403,   +0.001480419,   +0.999998780, -186.669398985},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  +0.828314502,   -0.560263547,   +0.001229408,  +58.278394108},
					{  +0.560263646,   +0.828313356,   -0.000766370,  -86.149709656},
					{  +0.000447177,   +0.001319756,   +0.999999056,  +60.668612354},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  +0.828950481,   -0.559321285,   +0.001568701,  +58.424896654},
					{  +0.559322184,   +0.828948866,   -0.001193592,  -86.239412307},
					{  +0.000390588,   +0.001864133,   +0.999998206, +176.817797053},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case 14:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  +0.553839640,   -0.832622411,   +0.001068340,  +85.734024615},
					{  +0.832623223,   +0.553839510,   -0.000760278,  -58.239834318},
					{  -0.000316646,   +0.001310444,   +0.999999174,  -70.325413557},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  +0.554076105,   -0.832465277,   +0.000876222,  +85.624994573},
					{  +0.832465884,   +0.554076135,   -0.000660068,  -58.163643166},
					{  -0.000318442,   +0.001094887,   +0.999999441, -186.481350308},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  +0.554284174,   -0.832327178,   +0.000222926,  +85.865434643},
					{  +0.832327361,   +0.554284576,   -0.000173083,  -58.302792776},
					{  -0.000338916,   +0.000281117,   +0.999999985,  +60.827906188},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  +0.552495567,   -0.833514996,   +0.000965512,  +85.952694366},
					{  +0.833515707,   +0.552495602,   -0.000654409,  -58.363892512},
					{  -0.000374288,   +0.001166825,   +0.999999341, +176.997583099},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case 15:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  +0.189723097,   -0.981837240,   +0.000870499, +100.538406893},
					{  +0.981837376,   +0.189722470,   -0.000814202,  -22.070035233},
					{  +0.000567708,   +0.001009441,   +0.999999286,  -70.088653923},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  +0.190214221,   -0.981742513,   +0.000392388, +100.465732035},
					{  +0.981742296,   +0.190213947,   -0.000813454,  -21.981868820},
					{  +0.000637585,   +0.000540180,   +0.999999598, -186.227508463},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  +0.191329407,   -0.981525750,   +0.000476421, +100.615972674},
					{  +0.981525671,   +0.191329153,   -0.000675901,  -22.158613766},
					{  +0.000490043,   +0.000597041,   +0.999999648,  +61.036473998},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  +0.188462504,   -0.982079817,   +0.001052390, +100.699146618},
					{  +0.982080132,   +0.188461733,   -0.000812082,  -22.250012584},
					{  +0.000557007,   +0.001186998,   +0.999999109, +177.222107767},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			default:
			return t;
		}
		case  6:
		switch (ofl.ladder_phi) {
			case  0:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  -0.000984877,   -0.999999281,   +0.000683984, +108.977941460},
					{  +0.999999357,   -0.000984872,   -0.000111272,   -2.624029017},
					{  -0.000293968,   +0.000683939,   +0.999999721,  -70.272559347},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  +0.001969405,   -0.999997910,   +0.000548505, +108.917106320},
					{  +0.999997865,   +0.001969342,   -0.000298137,   -2.603342588},
					{  -0.000135015,   +0.000547839,   +0.999999850, -186.417286334},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  -0.000609632,   -0.999999813,   +0.000054162, +109.049051619},
					{  +0.999999533,   -0.000609552,   -0.000501961,   -2.665021813},
					{  +0.000071734,   +0.000053754,   +1.000000008,  +60.891898723},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  -0.003075464,   -0.999995071,   -0.000632696, +109.036661586},
					{  +0.999994928,   -0.003074958,   -0.000598940,   -2.725775210},
					{  +0.000181201,   -0.000633539,   +0.999999799, +177.051800420},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  1:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  -0.387831870,   -0.921729883,   +0.000233861, +100.882068182},
					{  +0.921728883,   -0.387832456,   -0.000301399,  +38.008489808},
					{  +0.001638937,   +0.000094078,   +1.000000022,  -70.220337826},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  -0.386374263,   -0.922341711,   +0.000648528, +100.845899397},
					{  +0.922341061,   -0.386374923,   -0.000423222,  +38.068074377},
					{  +0.001383629,   +0.000431173,   +0.999999603, -186.379319031},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  -0.385430860,   -0.922736553,   +0.000201262, +100.909536096},
					{  +0.922735671,   -0.385431254,   -0.000629783,  +37.955908359},
					{  +0.001411573,   -0.000059771,   +0.999999670,  +60.918964975},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  -0.384717817,   -0.923034058,   +0.000245410, +100.938211969},
					{  +0.923033036,   -0.384718236,   -0.000800523,  +37.880184077},
					{  +0.001589374,   -0.000083652,   +0.999999414, +177.097714106},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  2:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  -0.705787802,   -0.708422906,   -0.000097494,  +77.847386054},
					{  +0.708421965,   -0.705788053,   -0.000554967,  +72.384578917},
					{  +0.001341956,   -0.000457524,   +1.000000032,  -70.201521973},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  -0.704635670,   -0.709568608,   -0.000660929,  +77.885362375},
					{  +0.709567870,   -0.704635023,   -0.001279889,  +72.492840185},
					{  +0.001477126,   -0.001365974,   +0.999999040, -186.369226706},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  -0.706608290,   -0.707604504,   +0.000163815,  +77.877063356},
					{  +0.707603469,   -0.706608656,   -0.000547613,  +72.302569169},
					{  +0.001524470,   -0.000268960,   +0.999999847,  +61.030087678},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  -0.707331306,   -0.706881643,   +0.000431330,  +77.910325226},
					{  +0.706880807,   -0.707331809,   -0.000097993,  +72.248497386},
					{  +0.001409711,   +0.000236635,   +1.000000041, +177.170337170},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  3:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  -0.921614068,   -0.388107405,   -0.000384199,  +43.361842396},
					{  +0.388107507,   -0.921613599,   -0.000932055,  +95.553305706},
					{  +0.000138122,   -0.001007569,   +0.999999448,  -70.007985486},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  -0.921723946,   -0.387846188,   -0.000716025,  +43.412509243},
					{  +0.387846429,   -0.921722025,   -0.001825578,  +95.698127244},
					{  +0.000372346,   -0.001959896,   +0.999998028, -186.156304689},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  -0.921961700,   -0.387280162,   -0.000809464,  +43.274766917},
					{  +0.387280725,   -0.921961366,   -0.000904312,  +95.409215350},
					{  -0.000275457,   -0.001146841,   +0.999999286,  +61.169425016},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  -0.922093803,   -0.386966448,   -0.000260596,  +43.236159936},
					{  +0.386966335,   -0.922093791,   +0.000006080,  +95.353411941},
					{  +0.000105734,   -0.000094902,   +0.999999963, +177.343492745},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  4:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  -0.999874406,   +0.015618923,   -0.000933123,   +2.596869041},
					{  -0.015618742,   -0.999878006,   +0.000153187, +103.536126127},
					{  -0.002370783,   +0.000182762,   +0.999999423,  -69.914510999},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  -0.999860281,   +0.016505154,   -0.000799787,   +2.698263740},
					{  -0.016504950,   -0.999863771,   +0.000147635, +103.519054444},
					{  -0.002239387,   +0.000177126,   +0.999999733, -186.063224884},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  -0.999930985,   +0.011449647,   -0.000777018,   +2.483725560},
					{  -0.011449233,   -0.999934448,   -0.000102276, +103.553922018},
					{  -0.002199461,   -0.000084433,   +0.999999788,  +61.273145006},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  -0.999973314,   +0.006802965,   -0.000889079,   +2.387559021},
					{  -0.006802552,   -0.999976858,   -0.000069886, +103.546155777},
					{  -0.002299303,   -0.000061671,   +0.999999535, +177.444629430},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  5:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  -0.922184962,   +0.386743247,   -0.000838427,  -42.540705909},
					{  -0.386742998,   -0.922186695,   +0.000912710,  +95.097001361},
					{  -0.001224840,   +0.001167032,   +0.999999223,  -70.494885845},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  -0.920360036,   +0.391067101,   -0.000170084,  -42.464501887},
					{  -0.391066064,   -0.920362060,   -0.000560179,  +95.047185336},
					{  -0.001211323,   -0.000444052,   +0.999999861, -186.680018155},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  -0.921938728,   +0.387330599,   -0.000331006,  -42.571357812},
					{  -0.387329729,   -0.921940877,   +0.000037107,  +95.036815715},
					{  -0.001094135,   +0.000164036,   +1.000000045,  +60.630170019},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  -0.921515725,   +0.388335650,   -0.000571944,  -42.616208187},
					{  -0.388335006,   -0.921517763,   +0.000475902,  +95.060901405},
					{  -0.001144784,   +0.000663186,   +0.999999779, +176.787262782},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  6:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  -0.701641854,   +0.712529182,   -0.000219753,  -77.100757634},
					{  -0.712528368,   -0.701642471,   -0.000360764,  +72.248207399},
					{  -0.001120402,   -0.000093161,   +0.999999888,  -70.730111581},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  -0.702184070,   +0.711994827,   -0.000287913,  -77.069720693},
					{  -0.711993995,   -0.702184705,   -0.000410809,  +72.288642710},
					{  -0.001173845,   -0.000080613,   +0.999999794, -186.874876554},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  -0.699127810,   +0.714996142,   -0.000043429,  -77.152552601},
					{  -0.714995354,   -0.699128354,   -0.000402200,  +72.239994659},
					{  -0.001006288,   -0.000244308,   +0.999999962,  +60.466645060},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  -0.697932635,   +0.716162415,   +0.000780321,  -77.123347666},
					{  -0.716162021,   -0.697932133,   -0.001292341,  +72.150607761},
					{  -0.001072736,   -0.001453815,   +0.999998869, +176.636735993},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  7:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  -0.376106255,   +0.926576459,   -0.000532187,  -99.993025826},
					{  -0.926577089,   -0.376106268,   -0.000317337,  +37.589214360},
					{  -0.000255274,   +0.000373319,   +0.999999788,  -70.487799915},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  -0.376179553,   +0.926546111,   -0.001180000,  -99.902485005},
					{  -0.926547383,   -0.376179554,   +0.000063024,  +37.608915963},
					{  -0.000145337,   +0.001116610,   +0.999999258, -186.653518670},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  -0.376779746,   +0.926302752,   +0.000595998,  -99.992693281},
					{  -0.926303424,   -0.376779114,   -0.000771788,  +37.518896826},
					{  -0.000262312,   -0.000843149,   +0.999999503,  +60.696582784},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  -0.377968691,   +0.925817976,   +0.000926870,  -99.911974105},
					{  -0.925818882,   -0.377967661,   -0.000994450,  +37.415217889},
					{  -0.000336770,   -0.001233984,   +0.999999072, +176.866476581},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  8:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  +0.001611804,   +0.999998697,   +0.000091462, -108.215312035},
					{  -0.999999855,   +0.001611842,   -0.000818119,   -3.202410599},
					{  -0.000181280,   -0.000091753,   +0.999999760,  -70.488048704},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  +0.000714243,   +0.999999709,   +0.000266460, -108.234725252},
					{  -1.000000879,   +0.000714424,   -0.000829280,   -3.113444799},
					{  -0.000206557,   -0.000266943,   +0.999999726, -186.646930568},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  +0.002327592,   +0.999997271,   -0.000200491, -108.231461980},
					{  -0.999998591,   +0.002327449,   -0.000590071,   -3.275374387},
					{  +0.000037285,   +0.000199828,   +0.999999769,  +60.598608263},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  +0.002407383,   +0.999996940,   +0.000569133, -108.213327463},
					{  -0.999998359,   +0.002407710,   -0.000676257,   -3.348339939},
					{  -0.000034839,   -0.000569588,   +0.999999623, +176.779384177},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case  9:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  +0.386983206,   +0.922086599,   +0.000535004, -100.170776967},
					{  -0.922086586,   +0.386983398,   -0.000261976,  -43.834290700},
					{  -0.000441316,   -0.000391849,   +0.999999817,  -70.493221959},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  +0.386155410,   +0.922433461,   +0.000700780, -100.238693848},
					{  -0.922433548,   +0.386155653,   -0.000204814,  -43.812845158},
					{  -0.000466323,   -0.000567272,   +0.999999728, -186.652109371},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  +0.387643213,   +0.921809459,   +0.000177705, -100.139824572},
					{  -0.921809385,   +0.387643277,   -0.000164101,  -43.847848835},
					{  -0.000222965,   -0.000100082,   +0.999999973,  +60.593459825},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  +0.387716738,   +0.921778110,   +0.000921069, -100.079252630},
					{  -0.921778445,   +0.387716856,   +0.000053062,  -43.855013736},
					{  -0.000295113,   -0.000869477,   +0.999999574, +176.774245830},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case 10:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  +0.708175477,   +0.706036869,   +0.000973020,  -77.110442515},
					{  -0.706037472,   +0.708174975,   -0.000439037,  -78.344565450},
					{  -0.000463500,   -0.000377742,   +0.999999557,  -70.485515820},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  +0.709025363,   +0.705183364,   +0.000991061,  -77.227270994},
					{  -0.705184153,   +0.709024786,   -0.000249385,  -78.316666192},
					{  -0.000334219,   -0.000524356,   +0.999999541, -186.663971628},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  +0.708159974,   +0.706052684,   +0.000744985,  -76.992783701},
					{  -0.706053541,   +0.708159082,   +0.000055637,  -78.371506806},
					{  +0.000035110,   -0.000567055,   +0.999999580,  +60.624370442},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  +0.706625858,   +0.707588197,   +0.000576438,  -76.918408751},
					{  -0.707588759,   +0.706625019,   -0.000347237,  -78.387945679},
					{  -0.000134900,   -0.000163037,   +0.999999720, +176.824991528},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case 11:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  +0.925950938,   +0.377641508,   +0.001169937,  -42.462527427},
					{  -0.377641853,   +0.925951774,   +0.000011861, -101.504823035},
					{  -0.001274775,   -0.000452217,   +0.999999313,  -70.241083902},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  +0.926542226,   +0.376189766,   +0.000672121,  -42.591490986},
					{  -0.376189251,   +0.926542470,   -0.000877260, -101.465103304},
					{  -0.001107238,   +0.000560832,   +0.999999408, -186.395717466},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  +0.925921012,   +0.377715009,   +0.001153363,  -42.332646016},
					{  -0.377715604,   +0.925921653,   +0.000266826, -101.457980427},
					{  -0.001135329,   -0.000682134,   +0.999999317,  +60.903043008},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  +0.926032694,   +0.377441542,   +0.001071406,  -42.196248201},
					{  -0.377441712,   +0.926033370,   -0.000127716, -101.445116217},
					{  -0.001136257,   -0.000285503,   +0.999999422, +177.040821507},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case 12:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  +0.999917706,   -0.012747592,   +0.001306946,   -1.595247150},
					{  +0.012747939,   +0.999918745,   +0.000025137, -109.527131482},
					{  -0.000727111,   -0.000010276,   +0.999999131,  -70.434840543},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  +0.999893675,   -0.014531551,   +0.001065795,   -1.734384180},
					{  +0.014531693,   +0.999894388,   +0.000225781, -109.563832503},
					{  -0.000470254,   -0.000213090,   +0.999999255, -186.592005116},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  +0.999935628,   -0.011271699,   +0.001143286,   -1.426464019},
					{  +0.011270865,   +0.999935926,   +0.001057922, -109.413133415},
					{  -0.000578278,   -0.001045927,   +0.999998684,  +60.872059973},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  +0.999872310,   -0.015905011,   +0.001406713,   -1.286540494},
					{  +0.015905805,   +0.999873456,   -0.000289682, -109.323301417},
					{  -0.000838191,   +0.000308414,   +0.999999009, +177.011426903},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case 13:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  +0.921586223,   -0.388180225,   +0.001204622,  +43.357242564},
					{  +0.388179811,   +0.921581621,   -0.001504834, -101.015047653},
					{  +0.001313424,   +0.001851149,   +0.999997922,  -70.476566893},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  +0.921819834,   -0.387626009,   +0.000837192,  +43.220383092},
					{  +0.387624763,   +0.921816122,   -0.000797113, -100.871898434},
					{  +0.001341914,   +0.001057106,   +0.999998994, -186.650806048},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  +0.921396643,   -0.388631045,   +0.000788808,  +43.494823253},
					{  +0.388629770,   +0.921392697,   -0.000961638, -101.159706678},
					{  +0.001490566,   +0.001188430,   +0.999998693,  +60.663804427},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  +0.921542242,   -0.388285286,   +0.000963186,  +43.607261996},
					{  +0.388284345,   +0.921537982,   -0.001238471, -101.301469109},
					{  +0.001435490,   +0.001511795,   +0.999998333, +176.824750456},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case 14:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  +0.699949402,   -0.714193151,   +0.000880414,  +78.186032969},
					{  +0.714193685,   +0.699947352,   -0.001044740,  -77.640136863},
					{  +0.000878964,   +0.001358746,   +0.999998979,  -70.470978240},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  +0.700379353,   -0.713771985,   +0.000268012,  +78.098839773},
					{  +0.713772049,   +0.700377923,   -0.000534017,  -77.546784563},
					{  +0.000907751,   +0.000564440,   +0.999999688, -186.645321171},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  +0.699600509,   -0.714535386,   +0.000286975,  +78.262319416},
					{  +0.714535391,   +0.699598956,   -0.000704457,  -77.736434792},
					{  +0.001055865,   +0.000696238,   +0.999999499,  +60.669503223},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  +0.699868339,   -0.714272907,   +0.000554794,  +78.326464307},
					{  +0.714273084,   +0.699866542,   -0.000892386,  -77.837944610},
					{  +0.001000974,   +0.001019440,   +0.999999275, +176.830557270},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			case 15:
			switch (ofl.ladder_z) {
				case  0:
				t.matrix() = Eigen::Matrix4d{
					{  +0.378437576,   -0.925626363,   +0.000903255, +100.906849704},
					{  +0.925626758,   +0.378437020,   -0.000753164,  -43.108170767},
					{  +0.000310823,   +0.001121159,   +0.999999308,  -70.137624076},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  1:
				t.matrix() = Eigen::Matrix4d{
					{  +0.378332297,   -0.925669781,   +0.000343643, +100.823184715},
					{  +0.925669843,   +0.378332215,   -0.000317831,  -43.047023154},
					{  +0.000139464,   +0.000438407,   +0.999999883, -186.287429551},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  2:
				t.matrix() = Eigen::Matrix4d{
					{  +0.378153466,   -0.925742780,   +0.000505122, +100.975052715},
					{  +0.925742819,   +0.378153124,   -0.000671246,  -43.217123239},
					{  +0.000415394,   +0.000721515,   +0.999999650,  +61.001764458},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				case  3:
				t.matrix() = Eigen::Matrix4d{
					{  +0.376165003,   -0.926552267,   +0.000890909, +101.058333001},
					{  +0.926552676,   +0.376164628,   -0.000554365,  -43.294138773},
					{  +0.000173791,   +0.001034156,   +0.999999443, +177.153289312},
					{  +0.000000000,   +0.000000000,   +0.000000000,   +1.000000000}};
				return t;
				default:
				return t;
			}
			default:
			return t;
		}
		default:
		return t;
	}

	return t;
}
